version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: src/Dockerfile
    environment:
      - PORT=9000
      - FASTIFY_LOG_LEVEL=debug
      - SECURE_SESSION_COOKIE_KEY=9462c65ce20415a8d573c505eb8c89eac49f557d39191b349888f1ddf9631b36
      - NODE_TLS_REJECT_UNAUTHORIZED=0 # https://github.com/aws/aws-sdk-js/blob/e502a0f636470ec87e8cb35808d96acdda8fa304/lib/http/node.js#L156
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=img_reg_db
      - POSTGRES_USER=img_reg_local
      - POSTGRES_PASSWORD=hunter2
      - POSTGRES_PORT=5432
      - S3_BUCKET_NAME=img-reg-bkt
      - S3_ACCESS_KEY_ID=doesnt-matter
      - S3_SECRET_ACCESS_KEY=doesnt-matter
      - S3_ENDPOINT=localstack-s3:4566
    stdin_open: true
    tty: true
    ports:
      - "9000:9000"
    volumes:
      - "./src:/app/src"
    links:
      - localstack-s3

  localstack-s3:
    image: localstack/localstack:0.12.19.1
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - S3_BUCKET_NAME=img-reg-bkt
    ports:
      - "4566:4566"
    volumes:
      - "./localstack/tmp:/tmp/localstack"
      - "./localstack/init.sh:/docker-entrypoint-initaws.d/init.sh"

  postgres:
    image: postgres:14.0-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=img_reg_db
      - POSTGRES_USER=img_reg_local
      - POSTGRES_PASSWORD=hunter2
    ports:
      - "5432:5432"
    volumes:
      - "./postgres/tmp:/var/lib/postgresql/data"

  pgadmin:
    image: dpage/pgadmin4:6.1
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@dev.localhost
      - PGADMIN_DEFAULT_PASSWORD=hunter3
    ports:
      - "5433:80"
    volumes:
      - "./postgres/pgadmin/tmp:/var/lib/pgadmin"
      - "./postgres/pgadmin-servers-init.json:/pgadmin4/servers.json"
    links:
      - postgres
